package com.duzon.ssh.model;

import java.util.ArrayList;
import java.util.List;

public class MemberExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MEMBER
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MEMBER
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MEMBER
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public MemberExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MEMBER
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andMEMBER_NOIsNull() {
            addCriterion("MEMBER_NO is null");
            return (Criteria) this;
        }

        public Criteria andMEMBER_NOIsNotNull() {
            addCriterion("MEMBER_NO is not null");
            return (Criteria) this;
        }

        public Criteria andMEMBER_NOEqualTo(String value) {
            addCriterion("MEMBER_NO =", value, "MEMBER_NO");
            return (Criteria) this;
        }

        public Criteria andMEMBER_NONotEqualTo(String value) {
            addCriterion("MEMBER_NO <>", value, "MEMBER_NO");
            return (Criteria) this;
        }

        public Criteria andMEMBER_NOGreaterThan(String value) {
            addCriterion("MEMBER_NO >", value, "MEMBER_NO");
            return (Criteria) this;
        }

        public Criteria andMEMBER_NOGreaterThanOrEqualTo(String value) {
            addCriterion("MEMBER_NO >=", value, "MEMBER_NO");
            return (Criteria) this;
        }

        public Criteria andMEMBER_NOLessThan(String value) {
            addCriterion("MEMBER_NO <", value, "MEMBER_NO");
            return (Criteria) this;
        }

        public Criteria andMEMBER_NOLessThanOrEqualTo(String value) {
            addCriterion("MEMBER_NO <=", value, "MEMBER_NO");
            return (Criteria) this;
        }

        public Criteria andMEMBER_NOLike(String value) {
            addCriterion("MEMBER_NO like", value, "MEMBER_NO");
            return (Criteria) this;
        }

        public Criteria andMEMBER_NONotLike(String value) {
            addCriterion("MEMBER_NO not like", value, "MEMBER_NO");
            return (Criteria) this;
        }

        public Criteria andMEMBER_NOIn(List<String> values) {
            addCriterion("MEMBER_NO in", values, "MEMBER_NO");
            return (Criteria) this;
        }

        public Criteria andMEMBER_NONotIn(List<String> values) {
            addCriterion("MEMBER_NO not in", values, "MEMBER_NO");
            return (Criteria) this;
        }

        public Criteria andMEMBER_NOBetween(String value1, String value2) {
            addCriterion("MEMBER_NO between", value1, value2, "MEMBER_NO");
            return (Criteria) this;
        }

        public Criteria andMEMBER_NONotBetween(String value1, String value2) {
            addCriterion("MEMBER_NO not between", value1, value2, "MEMBER_NO");
            return (Criteria) this;
        }

        public Criteria andLOGIN_IDIsNull() {
            addCriterion("LOGIN_ID is null");
            return (Criteria) this;
        }

        public Criteria andLOGIN_IDIsNotNull() {
            addCriterion("LOGIN_ID is not null");
            return (Criteria) this;
        }

        public Criteria andLOGIN_IDEqualTo(String value) {
            addCriterion("LOGIN_ID =", value, "LOGIN_ID");
            return (Criteria) this;
        }

        public Criteria andLOGIN_IDNotEqualTo(String value) {
            addCriterion("LOGIN_ID <>", value, "LOGIN_ID");
            return (Criteria) this;
        }

        public Criteria andLOGIN_IDGreaterThan(String value) {
            addCriterion("LOGIN_ID >", value, "LOGIN_ID");
            return (Criteria) this;
        }

        public Criteria andLOGIN_IDGreaterThanOrEqualTo(String value) {
            addCriterion("LOGIN_ID >=", value, "LOGIN_ID");
            return (Criteria) this;
        }

        public Criteria andLOGIN_IDLessThan(String value) {
            addCriterion("LOGIN_ID <", value, "LOGIN_ID");
            return (Criteria) this;
        }

        public Criteria andLOGIN_IDLessThanOrEqualTo(String value) {
            addCriterion("LOGIN_ID <=", value, "LOGIN_ID");
            return (Criteria) this;
        }

        public Criteria andLOGIN_IDLike(String value) {
            addCriterion("LOGIN_ID like", value, "LOGIN_ID");
            return (Criteria) this;
        }

        public Criteria andLOGIN_IDNotLike(String value) {
            addCriterion("LOGIN_ID not like", value, "LOGIN_ID");
            return (Criteria) this;
        }

        public Criteria andLOGIN_IDIn(List<String> values) {
            addCriterion("LOGIN_ID in", values, "LOGIN_ID");
            return (Criteria) this;
        }

        public Criteria andLOGIN_IDNotIn(List<String> values) {
            addCriterion("LOGIN_ID not in", values, "LOGIN_ID");
            return (Criteria) this;
        }

        public Criteria andLOGIN_IDBetween(String value1, String value2) {
            addCriterion("LOGIN_ID between", value1, value2, "LOGIN_ID");
            return (Criteria) this;
        }

        public Criteria andLOGIN_IDNotBetween(String value1, String value2) {
            addCriterion("LOGIN_ID not between", value1, value2, "LOGIN_ID");
            return (Criteria) this;
        }

        public Criteria andPASSWORDIsNull() {
            addCriterion("PASSWORD is null");
            return (Criteria) this;
        }

        public Criteria andPASSWORDIsNotNull() {
            addCriterion("PASSWORD is not null");
            return (Criteria) this;
        }

        public Criteria andPASSWORDEqualTo(String value) {
            addCriterion("PASSWORD =", value, "PASSWORD");
            return (Criteria) this;
        }

        public Criteria andPASSWORDNotEqualTo(String value) {
            addCriterion("PASSWORD <>", value, "PASSWORD");
            return (Criteria) this;
        }

        public Criteria andPASSWORDGreaterThan(String value) {
            addCriterion("PASSWORD >", value, "PASSWORD");
            return (Criteria) this;
        }

        public Criteria andPASSWORDGreaterThanOrEqualTo(String value) {
            addCriterion("PASSWORD >=", value, "PASSWORD");
            return (Criteria) this;
        }

        public Criteria andPASSWORDLessThan(String value) {
            addCriterion("PASSWORD <", value, "PASSWORD");
            return (Criteria) this;
        }

        public Criteria andPASSWORDLessThanOrEqualTo(String value) {
            addCriterion("PASSWORD <=", value, "PASSWORD");
            return (Criteria) this;
        }

        public Criteria andPASSWORDLike(String value) {
            addCriterion("PASSWORD like", value, "PASSWORD");
            return (Criteria) this;
        }

        public Criteria andPASSWORDNotLike(String value) {
            addCriterion("PASSWORD not like", value, "PASSWORD");
            return (Criteria) this;
        }

        public Criteria andPASSWORDIn(List<String> values) {
            addCriterion("PASSWORD in", values, "PASSWORD");
            return (Criteria) this;
        }

        public Criteria andPASSWORDNotIn(List<String> values) {
            addCriterion("PASSWORD not in", values, "PASSWORD");
            return (Criteria) this;
        }

        public Criteria andPASSWORDBetween(String value1, String value2) {
            addCriterion("PASSWORD between", value1, value2, "PASSWORD");
            return (Criteria) this;
        }

        public Criteria andPASSWORDNotBetween(String value1, String value2) {
            addCriterion("PASSWORD not between", value1, value2, "PASSWORD");
            return (Criteria) this;
        }

        public Criteria andNAMEIsNull() {
            addCriterion("NAME is null");
            return (Criteria) this;
        }

        public Criteria andNAMEIsNotNull() {
            addCriterion("NAME is not null");
            return (Criteria) this;
        }

        public Criteria andNAMEEqualTo(String value) {
            addCriterion("NAME =", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMENotEqualTo(String value) {
            addCriterion("NAME <>", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMEGreaterThan(String value) {
            addCriterion("NAME >", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMEGreaterThanOrEqualTo(String value) {
            addCriterion("NAME >=", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMELessThan(String value) {
            addCriterion("NAME <", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMELessThanOrEqualTo(String value) {
            addCriterion("NAME <=", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMELike(String value) {
            addCriterion("NAME like", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMENotLike(String value) {
            addCriterion("NAME not like", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMEIn(List<String> values) {
            addCriterion("NAME in", values, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMENotIn(List<String> values) {
            addCriterion("NAME not in", values, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMEBetween(String value1, String value2) {
            addCriterion("NAME between", value1, value2, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMENotBetween(String value1, String value2) {
            addCriterion("NAME not between", value1, value2, "NAME");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MEMBER
     *
     * @mbggenerated do_not_delete_during_merge Thu Jun 19 17:56:35 KST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MEMBER
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}