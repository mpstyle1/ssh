package com.duzon.ssh.model;

import java.util.ArrayList;
import java.util.List;

public class CommonCodeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table COMMON_CODE
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table COMMON_CODE
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table COMMON_CODE
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMMON_CODE
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public CommonCodeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMMON_CODE
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMMON_CODE
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMMON_CODE
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMMON_CODE
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMMON_CODE
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMMON_CODE
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMMON_CODE
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMMON_CODE
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMMON_CODE
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COMMON_CODE
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table COMMON_CODE
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTYPEIsNull() {
            addCriterion("TYPE is null");
            return (Criteria) this;
        }

        public Criteria andTYPEIsNotNull() {
            addCriterion("TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andTYPEEqualTo(String value) {
            addCriterion("TYPE =", value, "TYPE");
            return (Criteria) this;
        }

        public Criteria andTYPENotEqualTo(String value) {
            addCriterion("TYPE <>", value, "TYPE");
            return (Criteria) this;
        }

        public Criteria andTYPEGreaterThan(String value) {
            addCriterion("TYPE >", value, "TYPE");
            return (Criteria) this;
        }

        public Criteria andTYPEGreaterThanOrEqualTo(String value) {
            addCriterion("TYPE >=", value, "TYPE");
            return (Criteria) this;
        }

        public Criteria andTYPELessThan(String value) {
            addCriterion("TYPE <", value, "TYPE");
            return (Criteria) this;
        }

        public Criteria andTYPELessThanOrEqualTo(String value) {
            addCriterion("TYPE <=", value, "TYPE");
            return (Criteria) this;
        }

        public Criteria andTYPELike(String value) {
            addCriterion("TYPE like", value, "TYPE");
            return (Criteria) this;
        }

        public Criteria andTYPENotLike(String value) {
            addCriterion("TYPE not like", value, "TYPE");
            return (Criteria) this;
        }

        public Criteria andTYPEIn(List<String> values) {
            addCriterion("TYPE in", values, "TYPE");
            return (Criteria) this;
        }

        public Criteria andTYPENotIn(List<String> values) {
            addCriterion("TYPE not in", values, "TYPE");
            return (Criteria) this;
        }

        public Criteria andTYPEBetween(String value1, String value2) {
            addCriterion("TYPE between", value1, value2, "TYPE");
            return (Criteria) this;
        }

        public Criteria andTYPENotBetween(String value1, String value2) {
            addCriterion("TYPE not between", value1, value2, "TYPE");
            return (Criteria) this;
        }

        public Criteria andCDIsNull() {
            addCriterion("CD is null");
            return (Criteria) this;
        }

        public Criteria andCDIsNotNull() {
            addCriterion("CD is not null");
            return (Criteria) this;
        }

        public Criteria andCDEqualTo(String value) {
            addCriterion("CD =", value, "CD");
            return (Criteria) this;
        }

        public Criteria andCDNotEqualTo(String value) {
            addCriterion("CD <>", value, "CD");
            return (Criteria) this;
        }

        public Criteria andCDGreaterThan(String value) {
            addCriterion("CD >", value, "CD");
            return (Criteria) this;
        }

        public Criteria andCDGreaterThanOrEqualTo(String value) {
            addCriterion("CD >=", value, "CD");
            return (Criteria) this;
        }

        public Criteria andCDLessThan(String value) {
            addCriterion("CD <", value, "CD");
            return (Criteria) this;
        }

        public Criteria andCDLessThanOrEqualTo(String value) {
            addCriterion("CD <=", value, "CD");
            return (Criteria) this;
        }

        public Criteria andCDLike(String value) {
            addCriterion("CD like", value, "CD");
            return (Criteria) this;
        }

        public Criteria andCDNotLike(String value) {
            addCriterion("CD not like", value, "CD");
            return (Criteria) this;
        }

        public Criteria andCDIn(List<String> values) {
            addCriterion("CD in", values, "CD");
            return (Criteria) this;
        }

        public Criteria andCDNotIn(List<String> values) {
            addCriterion("CD not in", values, "CD");
            return (Criteria) this;
        }

        public Criteria andCDBetween(String value1, String value2) {
            addCriterion("CD between", value1, value2, "CD");
            return (Criteria) this;
        }

        public Criteria andCDNotBetween(String value1, String value2) {
            addCriterion("CD not between", value1, value2, "CD");
            return (Criteria) this;
        }

        public Criteria andNMIsNull() {
            addCriterion("NM is null");
            return (Criteria) this;
        }

        public Criteria andNMIsNotNull() {
            addCriterion("NM is not null");
            return (Criteria) this;
        }

        public Criteria andNMEqualTo(String value) {
            addCriterion("NM =", value, "NM");
            return (Criteria) this;
        }

        public Criteria andNMNotEqualTo(String value) {
            addCriterion("NM <>", value, "NM");
            return (Criteria) this;
        }

        public Criteria andNMGreaterThan(String value) {
            addCriterion("NM >", value, "NM");
            return (Criteria) this;
        }

        public Criteria andNMGreaterThanOrEqualTo(String value) {
            addCriterion("NM >=", value, "NM");
            return (Criteria) this;
        }

        public Criteria andNMLessThan(String value) {
            addCriterion("NM <", value, "NM");
            return (Criteria) this;
        }

        public Criteria andNMLessThanOrEqualTo(String value) {
            addCriterion("NM <=", value, "NM");
            return (Criteria) this;
        }

        public Criteria andNMLike(String value) {
            addCriterion("NM like", value, "NM");
            return (Criteria) this;
        }

        public Criteria andNMNotLike(String value) {
            addCriterion("NM not like", value, "NM");
            return (Criteria) this;
        }

        public Criteria andNMIn(List<String> values) {
            addCriterion("NM in", values, "NM");
            return (Criteria) this;
        }

        public Criteria andNMNotIn(List<String> values) {
            addCriterion("NM not in", values, "NM");
            return (Criteria) this;
        }

        public Criteria andNMBetween(String value1, String value2) {
            addCriterion("NM between", value1, value2, "NM");
            return (Criteria) this;
        }

        public Criteria andNMNotBetween(String value1, String value2) {
            addCriterion("NM not between", value1, value2, "NM");
            return (Criteria) this;
        }

        public Criteria andSEQIsNull() {
            addCriterion("SEQ is null");
            return (Criteria) this;
        }

        public Criteria andSEQIsNotNull() {
            addCriterion("SEQ is not null");
            return (Criteria) this;
        }

        public Criteria andSEQEqualTo(Short value) {
            addCriterion("SEQ =", value, "SEQ");
            return (Criteria) this;
        }

        public Criteria andSEQNotEqualTo(Short value) {
            addCriterion("SEQ <>", value, "SEQ");
            return (Criteria) this;
        }

        public Criteria andSEQGreaterThan(Short value) {
            addCriterion("SEQ >", value, "SEQ");
            return (Criteria) this;
        }

        public Criteria andSEQGreaterThanOrEqualTo(Short value) {
            addCriterion("SEQ >=", value, "SEQ");
            return (Criteria) this;
        }

        public Criteria andSEQLessThan(Short value) {
            addCriterion("SEQ <", value, "SEQ");
            return (Criteria) this;
        }

        public Criteria andSEQLessThanOrEqualTo(Short value) {
            addCriterion("SEQ <=", value, "SEQ");
            return (Criteria) this;
        }

        public Criteria andSEQIn(List<Short> values) {
            addCriterion("SEQ in", values, "SEQ");
            return (Criteria) this;
        }

        public Criteria andSEQNotIn(List<Short> values) {
            addCriterion("SEQ not in", values, "SEQ");
            return (Criteria) this;
        }

        public Criteria andSEQBetween(Short value1, Short value2) {
            addCriterion("SEQ between", value1, value2, "SEQ");
            return (Criteria) this;
        }

        public Criteria andSEQNotBetween(Short value1, Short value2) {
            addCriterion("SEQ not between", value1, value2, "SEQ");
            return (Criteria) this;
        }

        public Criteria andREMARKIsNull() {
            addCriterion("REMARK is null");
            return (Criteria) this;
        }

        public Criteria andREMARKIsNotNull() {
            addCriterion("REMARK is not null");
            return (Criteria) this;
        }

        public Criteria andREMARKEqualTo(Object value) {
            addCriterion("REMARK =", value, "REMARK");
            return (Criteria) this;
        }

        public Criteria andREMARKNotEqualTo(Object value) {
            addCriterion("REMARK <>", value, "REMARK");
            return (Criteria) this;
        }

        public Criteria andREMARKGreaterThan(Object value) {
            addCriterion("REMARK >", value, "REMARK");
            return (Criteria) this;
        }

        public Criteria andREMARKGreaterThanOrEqualTo(Object value) {
            addCriterion("REMARK >=", value, "REMARK");
            return (Criteria) this;
        }

        public Criteria andREMARKLessThan(Object value) {
            addCriterion("REMARK <", value, "REMARK");
            return (Criteria) this;
        }

        public Criteria andREMARKLessThanOrEqualTo(Object value) {
            addCriterion("REMARK <=", value, "REMARK");
            return (Criteria) this;
        }

        public Criteria andREMARKIn(List<Object> values) {
            addCriterion("REMARK in", values, "REMARK");
            return (Criteria) this;
        }

        public Criteria andREMARKNotIn(List<Object> values) {
            addCriterion("REMARK not in", values, "REMARK");
            return (Criteria) this;
        }

        public Criteria andREMARKBetween(Object value1, Object value2) {
            addCriterion("REMARK between", value1, value2, "REMARK");
            return (Criteria) this;
        }

        public Criteria andREMARKNotBetween(Object value1, Object value2) {
            addCriterion("REMARK not between", value1, value2, "REMARK");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table COMMON_CODE
     *
     * @mbggenerated do_not_delete_during_merge Thu Jun 19 17:56:35 KST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table COMMON_CODE
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}