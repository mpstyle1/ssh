package com.duzon.ssh.model;

import java.util.ArrayList;
import java.util.List;

public class MemberCardExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MEMBER_CARD
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MEMBER_CARD
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MEMBER_CARD
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER_CARD
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public MemberCardExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER_CARD
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER_CARD
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER_CARD
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER_CARD
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER_CARD
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER_CARD
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER_CARD
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER_CARD
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER_CARD
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER_CARD
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MEMBER_CARD
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCARD_NOIsNull() {
            addCriterion("CARD_NO is null");
            return (Criteria) this;
        }

        public Criteria andCARD_NOIsNotNull() {
            addCriterion("CARD_NO is not null");
            return (Criteria) this;
        }

        public Criteria andCARD_NOEqualTo(String value) {
            addCriterion("CARD_NO =", value, "CARD_NO");
            return (Criteria) this;
        }

        public Criteria andCARD_NONotEqualTo(String value) {
            addCriterion("CARD_NO <>", value, "CARD_NO");
            return (Criteria) this;
        }

        public Criteria andCARD_NOGreaterThan(String value) {
            addCriterion("CARD_NO >", value, "CARD_NO");
            return (Criteria) this;
        }

        public Criteria andCARD_NOGreaterThanOrEqualTo(String value) {
            addCriterion("CARD_NO >=", value, "CARD_NO");
            return (Criteria) this;
        }

        public Criteria andCARD_NOLessThan(String value) {
            addCriterion("CARD_NO <", value, "CARD_NO");
            return (Criteria) this;
        }

        public Criteria andCARD_NOLessThanOrEqualTo(String value) {
            addCriterion("CARD_NO <=", value, "CARD_NO");
            return (Criteria) this;
        }

        public Criteria andCARD_NOLike(String value) {
            addCriterion("CARD_NO like", value, "CARD_NO");
            return (Criteria) this;
        }

        public Criteria andCARD_NONotLike(String value) {
            addCriterion("CARD_NO not like", value, "CARD_NO");
            return (Criteria) this;
        }

        public Criteria andCARD_NOIn(List<String> values) {
            addCriterion("CARD_NO in", values, "CARD_NO");
            return (Criteria) this;
        }

        public Criteria andCARD_NONotIn(List<String> values) {
            addCriterion("CARD_NO not in", values, "CARD_NO");
            return (Criteria) this;
        }

        public Criteria andCARD_NOBetween(String value1, String value2) {
            addCriterion("CARD_NO between", value1, value2, "CARD_NO");
            return (Criteria) this;
        }

        public Criteria andCARD_NONotBetween(String value1, String value2) {
            addCriterion("CARD_NO not between", value1, value2, "CARD_NO");
            return (Criteria) this;
        }

        public Criteria andMEMBER_NOIsNull() {
            addCriterion("MEMBER_NO is null");
            return (Criteria) this;
        }

        public Criteria andMEMBER_NOIsNotNull() {
            addCriterion("MEMBER_NO is not null");
            return (Criteria) this;
        }

        public Criteria andMEMBER_NOEqualTo(String value) {
            addCriterion("MEMBER_NO =", value, "MEMBER_NO");
            return (Criteria) this;
        }

        public Criteria andMEMBER_NONotEqualTo(String value) {
            addCriterion("MEMBER_NO <>", value, "MEMBER_NO");
            return (Criteria) this;
        }

        public Criteria andMEMBER_NOGreaterThan(String value) {
            addCriterion("MEMBER_NO >", value, "MEMBER_NO");
            return (Criteria) this;
        }

        public Criteria andMEMBER_NOGreaterThanOrEqualTo(String value) {
            addCriterion("MEMBER_NO >=", value, "MEMBER_NO");
            return (Criteria) this;
        }

        public Criteria andMEMBER_NOLessThan(String value) {
            addCriterion("MEMBER_NO <", value, "MEMBER_NO");
            return (Criteria) this;
        }

        public Criteria andMEMBER_NOLessThanOrEqualTo(String value) {
            addCriterion("MEMBER_NO <=", value, "MEMBER_NO");
            return (Criteria) this;
        }

        public Criteria andMEMBER_NOLike(String value) {
            addCriterion("MEMBER_NO like", value, "MEMBER_NO");
            return (Criteria) this;
        }

        public Criteria andMEMBER_NONotLike(String value) {
            addCriterion("MEMBER_NO not like", value, "MEMBER_NO");
            return (Criteria) this;
        }

        public Criteria andMEMBER_NOIn(List<String> values) {
            addCriterion("MEMBER_NO in", values, "MEMBER_NO");
            return (Criteria) this;
        }

        public Criteria andMEMBER_NONotIn(List<String> values) {
            addCriterion("MEMBER_NO not in", values, "MEMBER_NO");
            return (Criteria) this;
        }

        public Criteria andMEMBER_NOBetween(String value1, String value2) {
            addCriterion("MEMBER_NO between", value1, value2, "MEMBER_NO");
            return (Criteria) this;
        }

        public Criteria andMEMBER_NONotBetween(String value1, String value2) {
            addCriterion("MEMBER_NO not between", value1, value2, "MEMBER_NO");
            return (Criteria) this;
        }

        public Criteria andCARD_ITEMIsNull() {
            addCriterion("CARD_ITEM is null");
            return (Criteria) this;
        }

        public Criteria andCARD_ITEMIsNotNull() {
            addCriterion("CARD_ITEM is not null");
            return (Criteria) this;
        }

        public Criteria andCARD_ITEMEqualTo(String value) {
            addCriterion("CARD_ITEM =", value, "CARD_ITEM");
            return (Criteria) this;
        }

        public Criteria andCARD_ITEMNotEqualTo(String value) {
            addCriterion("CARD_ITEM <>", value, "CARD_ITEM");
            return (Criteria) this;
        }

        public Criteria andCARD_ITEMGreaterThan(String value) {
            addCriterion("CARD_ITEM >", value, "CARD_ITEM");
            return (Criteria) this;
        }

        public Criteria andCARD_ITEMGreaterThanOrEqualTo(String value) {
            addCriterion("CARD_ITEM >=", value, "CARD_ITEM");
            return (Criteria) this;
        }

        public Criteria andCARD_ITEMLessThan(String value) {
            addCriterion("CARD_ITEM <", value, "CARD_ITEM");
            return (Criteria) this;
        }

        public Criteria andCARD_ITEMLessThanOrEqualTo(String value) {
            addCriterion("CARD_ITEM <=", value, "CARD_ITEM");
            return (Criteria) this;
        }

        public Criteria andCARD_ITEMLike(String value) {
            addCriterion("CARD_ITEM like", value, "CARD_ITEM");
            return (Criteria) this;
        }

        public Criteria andCARD_ITEMNotLike(String value) {
            addCriterion("CARD_ITEM not like", value, "CARD_ITEM");
            return (Criteria) this;
        }

        public Criteria andCARD_ITEMIn(List<String> values) {
            addCriterion("CARD_ITEM in", values, "CARD_ITEM");
            return (Criteria) this;
        }

        public Criteria andCARD_ITEMNotIn(List<String> values) {
            addCriterion("CARD_ITEM not in", values, "CARD_ITEM");
            return (Criteria) this;
        }

        public Criteria andCARD_ITEMBetween(String value1, String value2) {
            addCriterion("CARD_ITEM between", value1, value2, "CARD_ITEM");
            return (Criteria) this;
        }

        public Criteria andCARD_ITEMNotBetween(String value1, String value2) {
            addCriterion("CARD_ITEM not between", value1, value2, "CARD_ITEM");
            return (Criteria) this;
        }

        public Criteria andUSE_YNIsNull() {
            addCriterion("USE_YN is null");
            return (Criteria) this;
        }

        public Criteria andUSE_YNIsNotNull() {
            addCriterion("USE_YN is not null");
            return (Criteria) this;
        }

        public Criteria andUSE_YNEqualTo(String value) {
            addCriterion("USE_YN =", value, "USE_YN");
            return (Criteria) this;
        }

        public Criteria andUSE_YNNotEqualTo(String value) {
            addCriterion("USE_YN <>", value, "USE_YN");
            return (Criteria) this;
        }

        public Criteria andUSE_YNGreaterThan(String value) {
            addCriterion("USE_YN >", value, "USE_YN");
            return (Criteria) this;
        }

        public Criteria andUSE_YNGreaterThanOrEqualTo(String value) {
            addCriterion("USE_YN >=", value, "USE_YN");
            return (Criteria) this;
        }

        public Criteria andUSE_YNLessThan(String value) {
            addCriterion("USE_YN <", value, "USE_YN");
            return (Criteria) this;
        }

        public Criteria andUSE_YNLessThanOrEqualTo(String value) {
            addCriterion("USE_YN <=", value, "USE_YN");
            return (Criteria) this;
        }

        public Criteria andUSE_YNLike(String value) {
            addCriterion("USE_YN like", value, "USE_YN");
            return (Criteria) this;
        }

        public Criteria andUSE_YNNotLike(String value) {
            addCriterion("USE_YN not like", value, "USE_YN");
            return (Criteria) this;
        }

        public Criteria andUSE_YNIn(List<String> values) {
            addCriterion("USE_YN in", values, "USE_YN");
            return (Criteria) this;
        }

        public Criteria andUSE_YNNotIn(List<String> values) {
            addCriterion("USE_YN not in", values, "USE_YN");
            return (Criteria) this;
        }

        public Criteria andUSE_YNBetween(String value1, String value2) {
            addCriterion("USE_YN between", value1, value2, "USE_YN");
            return (Criteria) this;
        }

        public Criteria andUSE_YNNotBetween(String value1, String value2) {
            addCriterion("USE_YN not between", value1, value2, "USE_YN");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MEMBER_CARD
     *
     * @mbggenerated do_not_delete_during_merge Thu Jun 19 17:56:35 KST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MEMBER_CARD
     *
     * @mbggenerated Thu Jun 19 17:56:35 KST 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}